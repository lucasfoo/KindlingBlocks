{
  "contractName": "MyTokenFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "initialSupply",
          "type": "uint256"
        }
      ],
      "name": "createMyToken",
      "outputs": [
        {
          "internalType": "contract MyToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"name\":\"createMyToken\",\"outputs\":[{\"internalType\":\"contract MyToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/G/Blockchain/KindlingBlocks/erc20/contracts/MyToken.sol\":\"MyTokenFactory\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/G/Blockchain/KindlingBlocks/erc20/contracts/MyToken.sol\":{\"keccak256\":\"0xff9394ef2e5f0eb047fe0ec99941bd3ad3e0970898dcfe570c382c4dc44fa257\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f81067e01f1609cd85372e03900f0aaba2f5fe9a1bacc96e38e2fbac36248e0a\",\"dweb:/ipfs/QmTSA1Pw1ubC9fJDSsbYUYoarUXtRPJnpmJgMCSA3pNyaM\"]},\"/G/Blockchain/KindlingBlocks/erc20/contracts/MyTokenVote.sol\":{\"keccak256\":\"0x4dc9ae3559b9bedfb88b37ad4c6c91728b65fbe882a1b0baa134421267457200\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb375f94a4c2789d01ac6346ea6a2e6453ff3a097986bdda4cfd88ac75b5fb5d\",\"dweb:/ipfs/Qmb6tYURoGaMJs7XcYESEehrZwTc21PNYFGWFf5d85cobL\"]},\"/G/Blockchain/KindlingBlocks/erc20/contracts/TokenVote1202.sol\":{\"keccak256\":\"0xda0452e7d2feb01ca9e5896f9859651069c23cb4c22db9fa7145171a2f595fb6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a94a197c5207110f895eef2dadc1d83eea7b9f756bcd67cbc2907eb866de06f2\",\"dweb:/ipfs/QmX78PyLomXavttwafHg963Eb8YXn5JW7LbFWFbZ1yeuC5\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x418cfe64226a974419f8ab7287ad4bb413156a4d7af8ab5d9bcaa5678d1a2f22\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f65118c99d5d6cfe602720418b8551c2da6c3de650e61c5231b0be4396aae0d\",\"dweb:/ipfs/QmdLmkRHJhEifzzDjF44MHXcQx2SXc5EzhpHzN2z1vUq8H\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://163776cbf565c722232393aa2d62cbe8a2ffb5805986abf4906c00e1e07450a6\",\"dweb:/ipfs/QmPZoN9T3cb6o8bGhjBPZcz7im8T8DWhpr3tjLwhJJHx9N\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506147f5806100206000396000f3fe60806040523480156200001157600080fd5b50600436106200002e5760003560e01c80639c2dfa0b1462000033575b600080fd5b6200005160048036038101906200004b9190620000ea565b62000069565b60405162000060919062000191565b60405180910390f35b600082826040516200007b90620000ae565b6200008892919062000164565b604051809103906000f080158015620000a5573d6000803e3d6000fd5b50905092915050565b614572806200024e83390190565b600081359050620000cd8162000219565b92915050565b600081359050620000e48162000233565b92915050565b6000806040838503121562000104576200010362000214565b5b60006200011485828601620000bc565b92505060206200012785828601620000d3565b9150509250929050565b6200013c81620001ae565b82525050565b6200014d81620001ec565b82525050565b6200015e81620001e2565b82525050565b60006040820190506200017b600083018562000131565b6200018a602083018462000153565b9392505050565b6000602082019050620001a8600083018462000142565b92915050565b6000620001bb82620001c2565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000620001f98262000200565b9050919050565b60006200020d82620001c2565b9050919050565b600080fd5b6200022481620001ae565b81146200023057600080fd5b50565b6200023e81620001e2565b81146200024a57600080fd5b5056fe608060405260405180604001604052806040518060400160405280600281526020017f6e6f00000000000000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600381526020017f796573000000000000000000000000000000000000000000000000000000000081525081525060089060026200009592919062000687565b50348015620000a357600080fd5b5060405162004572380380620045728339818101604052810190620000c991906200083a565b6040518060400160405280600781526020017f4d79546f6b656e000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4d544b000000000000000000000000000000000000000000000000000000000081525081600390805190602001906200014d929190620006ee565b50806004908051906020019062000166929190620006ee565b5050506200017b8282620001c460201b60201c565b81600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000c6c565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000237576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200022e906200094b565b60405180910390fd5b6200024b600083836200033d60201b60201c565b80600260008282546200025f91906200099b565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254620002b691906200099b565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200031d91906200096d565b60405180910390a362000339600083836200034260201b60201c565b5050565b505050565b6200035a8383836200047960201b62000c5f1760201c565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614158015620003e657508273ffffffffffffffffffffffffffffffffffffffff16600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b80156200044157508173ffffffffffffffffffffffffffffffffffffffff16600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b1562000474576200047382620004676064846200047e60201b62000c641790919060201c565b6200049660201b60201c565b5b505050565b505050565b600081836200048e9190620009f8565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000509576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620005009062000929565b60405180910390fd5b6200051d826000836200033d60201b60201c565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015620005a6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200059d9062000907565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160026000828254620005ff919062000a30565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516200066691906200096d565b60405180910390a362000682836000846200034260201b60201c565b505050565b828054828255906000526020600020908101928215620006db579160200282015b82811115620006da578251829080519060200190620006c9929190620006ee565b5091602001919060010190620006a8565b5b509050620006ea91906200077f565b5090565b828054620006fc9062000aa9565b90600052602060002090601f0160209004810192826200072057600085556200076c565b82601f106200073b57805160ff19168380011785556200076c565b828001600101855582156200076c579182015b828111156200076b5782518255916020019190600101906200074e565b5b5090506200077b9190620007a7565b5090565b5b80821115620007a35760008181620007999190620007c6565b5060010162000780565b5090565b5b80821115620007c2576000816000905550600101620007a8565b5090565b508054620007d49062000aa9565b6000825580601f10620007e8575062000809565b601f016020900490600052602060002090810190620008089190620007a7565b5b50565b6000815190506200081d8162000c38565b92915050565b600081519050620008348162000c52565b92915050565b6000806040838503121562000854576200085362000b6c565b5b600062000864858286016200080c565b9250506020620008778582860162000823565b9150509250929050565b6000620008906022836200098a565b91506200089d8262000b71565b604082019050919050565b6000620008b76021836200098a565b9150620008c48262000bc0565b604082019050919050565b6000620008de601f836200098a565b9150620008eb8262000c0f565b602082019050919050565b620009018162000a9f565b82525050565b60006020820190508181036000830152620009228162000881565b9050919050565b600060208201905081810360008301526200094481620008a8565b9050919050565b600060208201905081810360008301526200096681620008cf565b9050919050565b6000602082019050620009846000830184620008f6565b92915050565b600082825260208201905092915050565b6000620009a88262000a9f565b9150620009b58362000a9f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620009ed57620009ec62000adf565b5b828201905092915050565b600062000a058262000a9f565b915062000a128362000a9f565b92508262000a255762000a2462000b0e565b5b828204905092915050565b600062000a3d8262000a9f565b915062000a4a8362000a9f565b92508282101562000a605762000a5f62000adf565b5b828203905092915050565b600062000a788262000a7f565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000600282049050600182168062000ac257607f821691505b6020821081141562000ad95762000ad862000b3d565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b62000c438162000a6b565b811462000c4f57600080fd5b50565b62000c5d8162000a9f565b811462000c6957600080fd5b50565b6138f68062000c7c6000396000f3fe60806040523480156200001157600080fd5b5060043610620001185760003560e01c80635c632b3811620000a5578063a457c2d7116200006f578063a457c2d71462000341578063a9059cbb1462000377578063d045f1e414620003ad578063dd62ed3e14620003cd5762000118565b80635c632b38146200027d5780635fab1aeb14620002b357806370a0823114620002e957806395d89b41146200031f5762000118565b8063313ce56711620000e7578063313ce56714620001cd578063326856a014620001ef57806339509351146200022557806352e2d6e9146200025b5762000118565b806306fdde03146200011d578063095ea7b3146200013f57806318160ddd146200017557806323b872dd1462000197575b600080fd5b6200012762000403565b60405162000136919062001a5f565b60405180910390f35b6200015d60048036038101906200015791906200159a565b6200049d565b6040516200016c919062001a25565b60405180910390f35b6200017f620004bf565b6040516200018e919062001bf9565b60405180910390f35b620001b56004803603810190620001af91906200153e565b620004c9565b604051620001c4919062001a25565b60405180910390f35b620001d7620005cc565b604051620001e6919062001c16565b60405180910390f35b6200020d600480360381019062000207919062001613565b620005d5565b6040516200021c919062001bf9565b60405180910390f35b6200024360048036038101906200023d91906200159a565b62000704565b60405162000252919062001a25565b60405180910390f35b62000265620007b8565b60405162000274919062001bf9565b60405180910390f35b6200029b600480360381019062000295919062001664565b620007c5565b604051620002aa919062001a42565b60405180910390f35b620002d16004803603810190620002cb919062001664565b62000805565b604051620002e0919062001bf9565b60405180910390f35b620003076004803603810190620003019190620014c5565b6200081d565b60405162000316919062001bf9565b60405180910390f35b6200032962000865565b60405162000338919062001a5f565b60405180910390f35b6200035f60048036038101906200035991906200159a565b620008ff565b6040516200036e919062001a25565b60405180910390f35b6200039560048036038101906200038f91906200159a565b620009f3565b604051620003a4919062001a25565b60405180910390f35b620003cb6004803603810190620003c5919062001664565b62000a15565b005b620003eb6004803603810190620003e59190620014f7565b62000bd8565b604051620003fa919062001bf9565b60405180910390f35b606060038054620004149062001ea6565b80601f0160208091040260200160405190810160405280929190818152602001828054620004429062001ea6565b8015620004935780601f10620004675761010080835404028352916020019162000493565b820191906000526020600020905b8154815290600101906020018083116200047557829003601f168201915b5050505050905090565b6000620004b5620004ad62000c7c565b848462000c84565b6001905092915050565b6000600254905090565b6000620004d884848462000e57565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006200052562000c7c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015620005a8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200059f9062001b2d565b60405180910390fd5b620005c085620005b762000c7c565b85840362000c84565b60019150509392505050565b60006012905090565b600033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006008836040516200062b90620013f4565b62000638929190620019ea565b604051809103906000f08015801562000655573d6000803e3d6000fd5b5090506006819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006001600680549050620006d1919062001da7565b905061012c42620006e3919062001d12565b60076000838152602001908152602001600020819055508092505050919050565b6000620007ae6200071462000c7c565b8484600160006200072462000c7c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054620007a8919062001d12565b62000c84565b6001905092915050565b6000600680549050905090565b60068181548110620007d657600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60076020528060005260406000206000915090505481565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054620008769062001ea6565b80601f0160208091040260200160405190810160405280929190818152602001828054620008a49062001ea6565b8015620008f55780601f10620008c957610100808354040283529160200191620008f5565b820191906000526020600020905b815481529060010190602001808311620008d757829003601f168201915b5050505050905090565b600080600160006200091062000c7c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015620009d0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620009c79062001bd7565b60405180910390fd5b620009e8620009de62000c7c565b8585840362000c84565b600191505092915050565b600062000a0b62000a0362000c7c565b848462000e57565b6001905092915050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462000aa8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000a9f9062001bb5565b60405180910390fd5b600760008281526020019081526020016000205442101562000b01576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000af89062001ae9565b60405180910390fd5b6006818154811062000b185762000b1762001f9f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635c40f6f460006040518263ffffffff1660e01b815260040162000b7e919062001a25565b602060405180830381600087803b15801562000b9957600080fd5b505af115801562000bae573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000bd49190620015e1565b5050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b505050565b6000818362000c74919062001d6f565b905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141562000cf7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000cee9062001b93565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000d6a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000d619062001ac7565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405162000e4a919062001bf9565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141562000eca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000ec19062001b71565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000f3d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000f349062001a83565b60405180910390fd5b62000f4a838383620010e9565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101562000fd3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000fca9062001b0b565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825462001068919062001d12565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051620010ce919062001bf9565b60405180910390a3620010e3848484620010ee565b50505050565b505050565b620010fb83838362000c5f565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141580156200118757508273ffffffffffffffffffffffffffffffffffffffff16600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b8015620011e257508173ffffffffffffffffffffffffffffffffffffffff16600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b156200120a5762001209826200120360648462000c6490919063ffffffff16565b6200120f565b5b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562001282576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620012799062001b4f565b60405180910390fd5b6200129082600083620010e9565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101562001319576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620013109062001aa5565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816002600082825462001372919062001da7565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051620013d9919062001bf9565b60405180910390a3620013ef83600084620010ee565b505050565b611537806200238a83390190565b600062001419620014138462001c5c565b62001c33565b90508281526020810184848401111562001438576200143762002002565b5b6200144584828562001e61565b509392505050565b6000813590506200145e816200233b565b92915050565b600081519050620014758162002355565b92915050565b600082601f83011262001493576200149262001ffd565b5b8135620014a584826020860162001402565b91505092915050565b600081359050620014bf816200236f565b92915050565b600060208284031215620014de57620014dd6200200c565b5b6000620014ee848285016200144d565b91505092915050565b600080604083850312156200151157620015106200200c565b5b600062001521858286016200144d565b925050602062001534858286016200144d565b9150509250929050565b6000806000606084860312156200155a57620015596200200c565b5b60006200156a868287016200144d565b93505060206200157d868287016200144d565b92505060406200159086828701620014ae565b9150509250925092565b60008060408385031215620015b457620015b36200200c565b5b6000620015c4858286016200144d565b9250506020620015d785828601620014ae565b9150509250929050565b600060208284031215620015fa57620015f96200200c565b5b60006200160a8482850162001464565b91505092915050565b6000602082840312156200162c576200162b6200200c565b5b600082013567ffffffffffffffff8111156200164d576200164c62002007565b5b6200165b848285016200147b565b91505092915050565b6000602082840312156200167d576200167c6200200c565b5b60006200168d84828501620014ae565b91505092915050565b6000620016a483836200178f565b905092915050565b6000620016b98262001cbc565b620016c5818562001cdf565b935083602082028501620016d98562001c92565b8060005b858110156200171a57848403895281620016f8858262001696565b9450620017058362001cd2565b925060208a01995050600181019050620016dd565b50829750879550505050505092915050565b620017378162001df6565b82525050565b620017488162001e39565b82525050565b60006200175b8262001cc7565b62001767818562001d01565b93506200177981856020860162001e70565b620017848162002011565b840191505092915050565b600081546200179e8162001ea6565b620017aa818662001cf0565b94506001821660008114620017c85760018114620017db5762001812565b60ff198316865260208601935062001812565b620017e68562001ca7565b60005b838110156200180a57815481890152600182019150602081019050620017e9565b808801955050505b50505092915050565b60006200182a60238362001d01565b9150620018378262002022565b604082019050919050565b60006200185160228362001d01565b91506200185e8262002071565b604082019050919050565b60006200187860228362001d01565b91506200188582620020c0565b604082019050919050565b60006200189f600b8362001d01565b9150620018ac826200210f565b602082019050919050565b6000620018c660268362001d01565b9150620018d38262002138565b604082019050919050565b6000620018ed60288362001d01565b9150620018fa8262002187565b604082019050919050565b60006200191460218362001d01565b91506200192182620021d6565b604082019050919050565b60006200193b60258362001d01565b9150620019488262002225565b604082019050919050565b60006200196260248362001d01565b91506200196f8262002274565b604082019050919050565b60006200198960098362001d01565b91506200199682620022c3565b602082019050919050565b6000620019b060258362001d01565b9150620019bd82620022ec565b604082019050919050565b620019d38162001e22565b82525050565b620019e48162001e2c565b82525050565b6000604082019050818103600083015262001a068185620016ac565b9050818103602083015262001a1c81846200174e565b90509392505050565b600060208201905062001a3c60008301846200172c565b92915050565b600060208201905062001a5960008301846200173d565b92915050565b6000602082019050818103600083015262001a7b81846200174e565b905092915050565b6000602082019050818103600083015262001a9e816200181b565b9050919050565b6000602082019050818103600083015262001ac08162001842565b9050919050565b6000602082019050818103600083015262001ae28162001869565b9050919050565b6000602082019050818103600083015262001b048162001890565b9050919050565b6000602082019050818103600083015262001b2681620018b7565b9050919050565b6000602082019050818103600083015262001b4881620018de565b9050919050565b6000602082019050818103600083015262001b6a8162001905565b9050919050565b6000602082019050818103600083015262001b8c816200192c565b9050919050565b6000602082019050818103600083015262001bae8162001953565b9050919050565b6000602082019050818103600083015262001bd0816200197a565b9050919050565b6000602082019050818103600083015262001bf281620019a1565b9050919050565b600060208201905062001c106000830184620019c8565b92915050565b600060208201905062001c2d6000830184620019d9565b92915050565b600062001c3f62001c52565b905062001c4d828262001edc565b919050565b6000604051905090565b600067ffffffffffffffff82111562001c7a5762001c7962001fce565b5b62001c858262002011565b9050602081019050919050565b60008190508160005260206000209050919050565b60008190508160005260206000209050919050565b600081549050919050565b600081519050919050565b6000600182019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600062001d1f8262001e22565b915062001d2c8362001e22565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111562001d645762001d6362001f12565b5b828201905092915050565b600062001d7c8262001e22565b915062001d898362001e22565b92508262001d9c5762001d9b62001f41565b5b828204905092915050565b600062001db48262001e22565b915062001dc18362001e22565b92508282101562001dd75762001dd662001f12565b5b828203905092915050565b600062001def8262001e02565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600062001e468262001e4d565b9050919050565b600062001e5a8262001e02565b9050919050565b82818337600083830152505050565b60005b8381101562001e9057808201518184015260208101905062001e73565b8381111562001ea0576000848401525b50505050565b6000600282049050600182168062001ebf57607f821691505b6020821081141562001ed65762001ed562001f70565b5b50919050565b62001ee78262002011565b810181811067ffffffffffffffff8211171562001f095762001f0862001fce565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f6e6f742065787069726564000000000000000000000000000000000000000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f6e6f74206f776e65720000000000000000000000000000000000000000000000600082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b620023468162001de2565b81146200235257600080fd5b50565b620023608162001df6565b81146200236c57600080fd5b50565b6200237a8162001e22565b81146200238657600080fd5b5056fe60806040523480156200001157600080fd5b50604051620015373803806200153783398181016040528101906200003791906200039d565b33600260016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002825110156200008857600080fd5b6001808160018154018082558091505003906000526020600020505060005b825181101562000122576001838281518110620000c957620000c862000608565b5b60200260200101519080600181540180825580915050600190039060005260206000200160009091909190915090805190602001906200010b929190620001a0565b50808062000119906200055c565b915050620000a7565b5033600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600260006101000a81548160ff021916908315150217905550806000908051906020019062000197929190620001a0565b50505062000690565b828054620001ae90620004f0565b90600052602060002090601f016020900481019282620001d257600085556200021e565b82601f10620001ed57805160ff19168380011785556200021e565b828001600101855582156200021e579182015b828111156200021d57825182559160200191906001019062000200565b5b5090506200022d919062000231565b5090565b5b808211156200024c57600081600090555060010162000232565b5090565b60006200026762000261846200044b565b62000422565b905080838252602082019050828560208602820111156200028d576200028c6200066b565b5b60005b85811015620002e257815167ffffffffffffffff811115620002b757620002b662000666565b5b808601620002c689826200036a565b8552602085019450602084019350505060018101905062000290565b5050509392505050565b600062000303620002fd846200047a565b62000422565b90508281526020810184848401111562000322576200032162000670565b5b6200032f848285620004ba565b509392505050565b600082601f8301126200034f576200034e62000666565b5b81516200036184826020860162000250565b91505092915050565b600082601f83011262000382576200038162000666565b5b815162000394848260208601620002ec565b91505092915050565b60008060408385031215620003b757620003b66200067a565b5b600083015167ffffffffffffffff811115620003d857620003d762000675565b5b620003e68582860162000337565b925050602083015167ffffffffffffffff8111156200040a576200040962000675565b5b62000418858286016200036a565b9150509250929050565b60006200042e62000441565b90506200043c828262000526565b919050565b6000604051905090565b600067ffffffffffffffff82111562000469576200046862000637565b5b602082029050602081019050919050565b600067ffffffffffffffff82111562000498576200049762000637565b5b620004a3826200067f565b9050602081019050919050565b6000819050919050565b60005b83811015620004da578082015181840152602081019050620004bd565b83811115620004ea576000848401525b50505050565b600060028204905060018216806200050957607f821691505b6020821081141562000520576200051f620005d9565b5b50919050565b62000531826200067f565b810181811067ffffffffffffffff8211171562000553576200055262000637565b5b80604052505050565b60006200056982620004b0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156200059f576200059e620005aa565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b610e9780620006a06000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80639fde4ef8116100715780639fde4ef8146101b5578063aec2ccae146101d3578063b54c71eb14610203578063b9e16b6514610233578063dc01262614610251578063dd4bc10114610281576100b4565b80630121b93f146100b957806327cf3844146100e957806344b9f341146101195780634e69d560146101495780635c40f6f41461016757806379ed13a714610197575b600080fd5b6100d360048036038101906100ce91906109ab565b6102b1565b6040516100e09190610b6a565b60405180910390f35b61010360048036038101906100fe9190610951565b6104f7565b6040516101109190610ba7565b60405180910390f35b610133600480360381019061012e91906109ab565b61050f565b6040516101409190610ba7565b60405180910390f35b610151610527565b60405161015e9190610b6a565b60405180910390f35b610181600480360381019061017c919061097e565b61053e565b60405161018e9190610b6a565b60405180910390f35b61019f6105f4565b6040516101ac9190610b48565b60405180910390f35b6101bd6106cd565b6040516101ca9190610ba7565b60405180910390f35b6101ed60048036038101906101e89190610951565b610731565b6040516101fa9190610b6a565b60405180910390f35b61021d600480360381019061021891906109ab565b610751565b60405161022a9190610ba7565b60405180910390f35b61023b61076e565b6040516102489190610b85565b60405180910390f35b61026b60048036038101906102669190610951565b610800565b6040516102789190610ba7565b60405180910390f35b61029b60048036038101906102969190610951565b610849565b6040516102a89190610ba7565b60405180910390f35b6000600260009054906101000a900460ff166102cc57600080fd5b60008214156102da57600080fd5b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016103379190610b2d565b60206040518083038186803b15801561034f57600080fd5b505afa158015610363573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038791906109d8565b90506000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600081141561040557816003600086815260200190815260200160002060008282546103f99190610c28565b9250508190555061045a565b816003600083815260200190815260200160002060008282546104289190610c7e565b92505081905550816003600086815260200190815260200160002060008282546104529190610c28565b925050819055505b83600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167fa9851bf7c64060a1bb8c8c6e89a10c1fb3898337da61ecd2db3ca015ad32ebe0856040516104e49190610ba7565b60405180910390a2600192505050919050565b60046020528060005260406000206000915090505481565b60036020528060005260406000206000915090505481565b6000600260009054906101000a900460ff16905090565b6000600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461059a57600080fd5b81600260006101000a81548160ff0219169083151502179055507fb32dd91638884ac1012ac9d4a0c8cce44d78ecd091818a79ef9210670f6647f7826040516105e39190610b6a565b60405180910390a160019050919050565b60606001805480602002602001604051908101604052809291908181526020016000905b828210156106c457838290600052602060002001805461063790610d2d565b80601f016020809104026020016040519081016040528092919081815260200182805461066390610d2d565b80156106b05780601f10610685576101008083540402835291602001916106b0565b820191906000526020600020905b81548152906001019060200180831161069357829003601f168201915b505050505081526020019060010190610618565b50505050905090565b6000806000905060005b60018054905081101561072957600360008381526020019081526020016000205460036000838152602001908152602001600020541115610716578091505b808061072190610d5f565b9150506106d7565b508091505090565b60056020528060005260406000206000915054906101000a900460ff1681565b600060036000838152602001908152602001600020549050919050565b60606000805461077d90610d2d565b80601f01602080910402602001604051908101604052809291908181526020018280546107a990610d2d565b80156107f65780601f106107cb576101008083540402835291602001916107f6565b820191906000526020600020905b8154815290600101906020018083116107d957829003601f168201915b5050505050905090565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b81526004016108a69190610b2d565b60206040518083038186803b1580156108be57600080fd5b505afa1580156108d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f691906109d8565b9050919050565b60008135905061090c81610e1c565b92915050565b60008135905061092181610e33565b92915050565b60008135905061093681610e4a565b92915050565b60008151905061094b81610e4a565b92915050565b60006020828403121561096757610966610e06565b5b6000610975848285016108fd565b91505092915050565b60006020828403121561099457610993610e06565b5b60006109a284828501610912565b91505092915050565b6000602082840312156109c1576109c0610e06565b5b60006109cf84828501610927565b91505092915050565b6000602082840312156109ee576109ed610e06565b5b60006109fc8482850161093c565b91505092915050565b6000610a118383610aac565b905092915050565b610a2281610cb2565b82525050565b6000610a3382610bd2565b610a3d8185610bf5565b935083602082028501610a4f85610bc2565b8060005b85811015610a8b5784840389528151610a6c8582610a05565b9450610a7783610be8565b925060208a01995050600181019050610a53565b50829750879550505050505092915050565b610aa681610cc4565b82525050565b6000610ab782610bdd565b610ac18185610c06565b9350610ad1818560208601610cfa565b610ada81610e0b565b840191505092915050565b6000610af082610bdd565b610afa8185610c17565b9350610b0a818560208601610cfa565b610b1381610e0b565b840191505092915050565b610b2781610cf0565b82525050565b6000602082019050610b426000830184610a19565b92915050565b60006020820190508181036000830152610b628184610a28565b905092915050565b6000602082019050610b7f6000830184610a9d565b92915050565b60006020820190508181036000830152610b9f8184610ae5565b905092915050565b6000602082019050610bbc6000830184610b1e565b92915050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610c3382610cf0565b9150610c3e83610cf0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610c7357610c72610da8565b5b828201905092915050565b6000610c8982610cf0565b9150610c9483610cf0565b925082821015610ca757610ca6610da8565b5b828203905092915050565b6000610cbd82610cd0565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015610d18578082015181840152602081019050610cfd565b83811115610d27576000848401525b50505050565b60006002820490506001821680610d4557607f821691505b60208210811415610d5957610d58610dd7565b5b50919050565b6000610d6a82610cf0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d9d57610d9c610da8565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b610e2581610cb2565b8114610e3057600080fd5b50565b610e3c81610cc4565b8114610e4757600080fd5b50565b610e5381610cf0565b8114610e5e57600080fd5b5056fea264697066735822122076f42c1e11e7b306c1de6df0271459cf4163cffd725844a365c98da2aabc8ab064736f6c63430008060033a2646970667358221220086be0b1c111dc27eeec6f1d7e4cc0b49afa16859b99f166b9bbbaefcd1ffe1d64736f6c63430008060033a264697066735822122009951f76660a765043828aa67daf499ba5aaf1d75767c9fb757cdb96ec11116564736f6c63430008060033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b50600436106200002e5760003560e01c80639c2dfa0b1462000033575b600080fd5b6200005160048036038101906200004b9190620000ea565b62000069565b60405162000060919062000191565b60405180910390f35b600082826040516200007b90620000ae565b6200008892919062000164565b604051809103906000f080158015620000a5573d6000803e3d6000fd5b50905092915050565b614572806200024e83390190565b600081359050620000cd8162000219565b92915050565b600081359050620000e48162000233565b92915050565b6000806040838503121562000104576200010362000214565b5b60006200011485828601620000bc565b92505060206200012785828601620000d3565b9150509250929050565b6200013c81620001ae565b82525050565b6200014d81620001ec565b82525050565b6200015e81620001e2565b82525050565b60006040820190506200017b600083018562000131565b6200018a602083018462000153565b9392505050565b6000602082019050620001a8600083018462000142565b92915050565b6000620001bb82620001c2565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000620001f98262000200565b9050919050565b60006200020d82620001c2565b9050919050565b600080fd5b6200022481620001ae565b81146200023057600080fd5b50565b6200023e81620001e2565b81146200024a57600080fd5b5056fe608060405260405180604001604052806040518060400160405280600281526020017f6e6f00000000000000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600381526020017f796573000000000000000000000000000000000000000000000000000000000081525081525060089060026200009592919062000687565b50348015620000a357600080fd5b5060405162004572380380620045728339818101604052810190620000c991906200083a565b6040518060400160405280600781526020017f4d79546f6b656e000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4d544b000000000000000000000000000000000000000000000000000000000081525081600390805190602001906200014d929190620006ee565b50806004908051906020019062000166929190620006ee565b5050506200017b8282620001c460201b60201c565b81600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000c6c565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000237576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200022e906200094b565b60405180910390fd5b6200024b600083836200033d60201b60201c565b80600260008282546200025f91906200099b565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254620002b691906200099b565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200031d91906200096d565b60405180910390a362000339600083836200034260201b60201c565b5050565b505050565b6200035a8383836200047960201b62000c5f1760201c565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614158015620003e657508273ffffffffffffffffffffffffffffffffffffffff16600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b80156200044157508173ffffffffffffffffffffffffffffffffffffffff16600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b1562000474576200047382620004676064846200047e60201b62000c641790919060201c565b6200049660201b60201c565b5b505050565b505050565b600081836200048e9190620009f8565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000509576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620005009062000929565b60405180910390fd5b6200051d826000836200033d60201b60201c565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015620005a6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200059d9062000907565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160026000828254620005ff919062000a30565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516200066691906200096d565b60405180910390a362000682836000846200034260201b60201c565b505050565b828054828255906000526020600020908101928215620006db579160200282015b82811115620006da578251829080519060200190620006c9929190620006ee565b5091602001919060010190620006a8565b5b509050620006ea91906200077f565b5090565b828054620006fc9062000aa9565b90600052602060002090601f0160209004810192826200072057600085556200076c565b82601f106200073b57805160ff19168380011785556200076c565b828001600101855582156200076c579182015b828111156200076b5782518255916020019190600101906200074e565b5b5090506200077b9190620007a7565b5090565b5b80821115620007a35760008181620007999190620007c6565b5060010162000780565b5090565b5b80821115620007c2576000816000905550600101620007a8565b5090565b508054620007d49062000aa9565b6000825580601f10620007e8575062000809565b601f016020900490600052602060002090810190620008089190620007a7565b5b50565b6000815190506200081d8162000c38565b92915050565b600081519050620008348162000c52565b92915050565b6000806040838503121562000854576200085362000b6c565b5b600062000864858286016200080c565b9250506020620008778582860162000823565b9150509250929050565b6000620008906022836200098a565b91506200089d8262000b71565b604082019050919050565b6000620008b76021836200098a565b9150620008c48262000bc0565b604082019050919050565b6000620008de601f836200098a565b9150620008eb8262000c0f565b602082019050919050565b620009018162000a9f565b82525050565b60006020820190508181036000830152620009228162000881565b9050919050565b600060208201905081810360008301526200094481620008a8565b9050919050565b600060208201905081810360008301526200096681620008cf565b9050919050565b6000602082019050620009846000830184620008f6565b92915050565b600082825260208201905092915050565b6000620009a88262000a9f565b9150620009b58362000a9f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620009ed57620009ec62000adf565b5b828201905092915050565b600062000a058262000a9f565b915062000a128362000a9f565b92508262000a255762000a2462000b0e565b5b828204905092915050565b600062000a3d8262000a9f565b915062000a4a8362000a9f565b92508282101562000a605762000a5f62000adf565b5b828203905092915050565b600062000a788262000a7f565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000600282049050600182168062000ac257607f821691505b6020821081141562000ad95762000ad862000b3d565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b62000c438162000a6b565b811462000c4f57600080fd5b50565b62000c5d8162000a9f565b811462000c6957600080fd5b50565b6138f68062000c7c6000396000f3fe60806040523480156200001157600080fd5b5060043610620001185760003560e01c80635c632b3811620000a5578063a457c2d7116200006f578063a457c2d71462000341578063a9059cbb1462000377578063d045f1e414620003ad578063dd62ed3e14620003cd5762000118565b80635c632b38146200027d5780635fab1aeb14620002b357806370a0823114620002e957806395d89b41146200031f5762000118565b8063313ce56711620000e7578063313ce56714620001cd578063326856a014620001ef57806339509351146200022557806352e2d6e9146200025b5762000118565b806306fdde03146200011d578063095ea7b3146200013f57806318160ddd146200017557806323b872dd1462000197575b600080fd5b6200012762000403565b60405162000136919062001a5f565b60405180910390f35b6200015d60048036038101906200015791906200159a565b6200049d565b6040516200016c919062001a25565b60405180910390f35b6200017f620004bf565b6040516200018e919062001bf9565b60405180910390f35b620001b56004803603810190620001af91906200153e565b620004c9565b604051620001c4919062001a25565b60405180910390f35b620001d7620005cc565b604051620001e6919062001c16565b60405180910390f35b6200020d600480360381019062000207919062001613565b620005d5565b6040516200021c919062001bf9565b60405180910390f35b6200024360048036038101906200023d91906200159a565b62000704565b60405162000252919062001a25565b60405180910390f35b62000265620007b8565b60405162000274919062001bf9565b60405180910390f35b6200029b600480360381019062000295919062001664565b620007c5565b604051620002aa919062001a42565b60405180910390f35b620002d16004803603810190620002cb919062001664565b62000805565b604051620002e0919062001bf9565b60405180910390f35b620003076004803603810190620003019190620014c5565b6200081d565b60405162000316919062001bf9565b60405180910390f35b6200032962000865565b60405162000338919062001a5f565b60405180910390f35b6200035f60048036038101906200035991906200159a565b620008ff565b6040516200036e919062001a25565b60405180910390f35b6200039560048036038101906200038f91906200159a565b620009f3565b604051620003a4919062001a25565b60405180910390f35b620003cb6004803603810190620003c5919062001664565b62000a15565b005b620003eb6004803603810190620003e59190620014f7565b62000bd8565b604051620003fa919062001bf9565b60405180910390f35b606060038054620004149062001ea6565b80601f0160208091040260200160405190810160405280929190818152602001828054620004429062001ea6565b8015620004935780601f10620004675761010080835404028352916020019162000493565b820191906000526020600020905b8154815290600101906020018083116200047557829003601f168201915b5050505050905090565b6000620004b5620004ad62000c7c565b848462000c84565b6001905092915050565b6000600254905090565b6000620004d884848462000e57565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006200052562000c7c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015620005a8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200059f9062001b2d565b60405180910390fd5b620005c085620005b762000c7c565b85840362000c84565b60019150509392505050565b60006012905090565b600033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006008836040516200062b90620013f4565b62000638929190620019ea565b604051809103906000f08015801562000655573d6000803e3d6000fd5b5090506006819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006001600680549050620006d1919062001da7565b905061012c42620006e3919062001d12565b60076000838152602001908152602001600020819055508092505050919050565b6000620007ae6200071462000c7c565b8484600160006200072462000c7c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054620007a8919062001d12565b62000c84565b6001905092915050565b6000600680549050905090565b60068181548110620007d657600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60076020528060005260406000206000915090505481565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054620008769062001ea6565b80601f0160208091040260200160405190810160405280929190818152602001828054620008a49062001ea6565b8015620008f55780601f10620008c957610100808354040283529160200191620008f5565b820191906000526020600020905b815481529060010190602001808311620008d757829003601f168201915b5050505050905090565b600080600160006200091062000c7c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015620009d0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620009c79062001bd7565b60405180910390fd5b620009e8620009de62000c7c565b8585840362000c84565b600191505092915050565b600062000a0b62000a0362000c7c565b848462000e57565b6001905092915050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462000aa8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000a9f9062001bb5565b60405180910390fd5b600760008281526020019081526020016000205442101562000b01576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000af89062001ae9565b60405180910390fd5b6006818154811062000b185762000b1762001f9f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635c40f6f460006040518263ffffffff1660e01b815260040162000b7e919062001a25565b602060405180830381600087803b15801562000b9957600080fd5b505af115801562000bae573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000bd49190620015e1565b5050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b505050565b6000818362000c74919062001d6f565b905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141562000cf7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000cee9062001b93565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000d6a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000d619062001ac7565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405162000e4a919062001bf9565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141562000eca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000ec19062001b71565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000f3d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000f349062001a83565b60405180910390fd5b62000f4a838383620010e9565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101562000fd3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000fca9062001b0b565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825462001068919062001d12565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051620010ce919062001bf9565b60405180910390a3620010e3848484620010ee565b50505050565b505050565b620010fb83838362000c5f565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141580156200118757508273ffffffffffffffffffffffffffffffffffffffff16600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b8015620011e257508173ffffffffffffffffffffffffffffffffffffffff16600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b156200120a5762001209826200120360648462000c6490919063ffffffff16565b6200120f565b5b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562001282576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620012799062001b4f565b60405180910390fd5b6200129082600083620010e9565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101562001319576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620013109062001aa5565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816002600082825462001372919062001da7565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051620013d9919062001bf9565b60405180910390a3620013ef83600084620010ee565b505050565b611537806200238a83390190565b600062001419620014138462001c5c565b62001c33565b90508281526020810184848401111562001438576200143762002002565b5b6200144584828562001e61565b509392505050565b6000813590506200145e816200233b565b92915050565b600081519050620014758162002355565b92915050565b600082601f83011262001493576200149262001ffd565b5b8135620014a584826020860162001402565b91505092915050565b600081359050620014bf816200236f565b92915050565b600060208284031215620014de57620014dd6200200c565b5b6000620014ee848285016200144d565b91505092915050565b600080604083850312156200151157620015106200200c565b5b600062001521858286016200144d565b925050602062001534858286016200144d565b9150509250929050565b6000806000606084860312156200155a57620015596200200c565b5b60006200156a868287016200144d565b93505060206200157d868287016200144d565b92505060406200159086828701620014ae565b9150509250925092565b60008060408385031215620015b457620015b36200200c565b5b6000620015c4858286016200144d565b9250506020620015d785828601620014ae565b9150509250929050565b600060208284031215620015fa57620015f96200200c565b5b60006200160a8482850162001464565b91505092915050565b6000602082840312156200162c576200162b6200200c565b5b600082013567ffffffffffffffff8111156200164d576200164c62002007565b5b6200165b848285016200147b565b91505092915050565b6000602082840312156200167d576200167c6200200c565b5b60006200168d84828501620014ae565b91505092915050565b6000620016a483836200178f565b905092915050565b6000620016b98262001cbc565b620016c5818562001cdf565b935083602082028501620016d98562001c92565b8060005b858110156200171a57848403895281620016f8858262001696565b9450620017058362001cd2565b925060208a01995050600181019050620016dd565b50829750879550505050505092915050565b620017378162001df6565b82525050565b620017488162001e39565b82525050565b60006200175b8262001cc7565b62001767818562001d01565b93506200177981856020860162001e70565b620017848162002011565b840191505092915050565b600081546200179e8162001ea6565b620017aa818662001cf0565b94506001821660008114620017c85760018114620017db5762001812565b60ff198316865260208601935062001812565b620017e68562001ca7565b60005b838110156200180a57815481890152600182019150602081019050620017e9565b808801955050505b50505092915050565b60006200182a60238362001d01565b9150620018378262002022565b604082019050919050565b60006200185160228362001d01565b91506200185e8262002071565b604082019050919050565b60006200187860228362001d01565b91506200188582620020c0565b604082019050919050565b60006200189f600b8362001d01565b9150620018ac826200210f565b602082019050919050565b6000620018c660268362001d01565b9150620018d38262002138565b604082019050919050565b6000620018ed60288362001d01565b9150620018fa8262002187565b604082019050919050565b60006200191460218362001d01565b91506200192182620021d6565b604082019050919050565b60006200193b60258362001d01565b9150620019488262002225565b604082019050919050565b60006200196260248362001d01565b91506200196f8262002274565b604082019050919050565b60006200198960098362001d01565b91506200199682620022c3565b602082019050919050565b6000620019b060258362001d01565b9150620019bd82620022ec565b604082019050919050565b620019d38162001e22565b82525050565b620019e48162001e2c565b82525050565b6000604082019050818103600083015262001a068185620016ac565b9050818103602083015262001a1c81846200174e565b90509392505050565b600060208201905062001a3c60008301846200172c565b92915050565b600060208201905062001a5960008301846200173d565b92915050565b6000602082019050818103600083015262001a7b81846200174e565b905092915050565b6000602082019050818103600083015262001a9e816200181b565b9050919050565b6000602082019050818103600083015262001ac08162001842565b9050919050565b6000602082019050818103600083015262001ae28162001869565b9050919050565b6000602082019050818103600083015262001b048162001890565b9050919050565b6000602082019050818103600083015262001b2681620018b7565b9050919050565b6000602082019050818103600083015262001b4881620018de565b9050919050565b6000602082019050818103600083015262001b6a8162001905565b9050919050565b6000602082019050818103600083015262001b8c816200192c565b9050919050565b6000602082019050818103600083015262001bae8162001953565b9050919050565b6000602082019050818103600083015262001bd0816200197a565b9050919050565b6000602082019050818103600083015262001bf281620019a1565b9050919050565b600060208201905062001c106000830184620019c8565b92915050565b600060208201905062001c2d6000830184620019d9565b92915050565b600062001c3f62001c52565b905062001c4d828262001edc565b919050565b6000604051905090565b600067ffffffffffffffff82111562001c7a5762001c7962001fce565b5b62001c858262002011565b9050602081019050919050565b60008190508160005260206000209050919050565b60008190508160005260206000209050919050565b600081549050919050565b600081519050919050565b6000600182019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600062001d1f8262001e22565b915062001d2c8362001e22565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111562001d645762001d6362001f12565b5b828201905092915050565b600062001d7c8262001e22565b915062001d898362001e22565b92508262001d9c5762001d9b62001f41565b5b828204905092915050565b600062001db48262001e22565b915062001dc18362001e22565b92508282101562001dd75762001dd662001f12565b5b828203905092915050565b600062001def8262001e02565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600062001e468262001e4d565b9050919050565b600062001e5a8262001e02565b9050919050565b82818337600083830152505050565b60005b8381101562001e9057808201518184015260208101905062001e73565b8381111562001ea0576000848401525b50505050565b6000600282049050600182168062001ebf57607f821691505b6020821081141562001ed65762001ed562001f70565b5b50919050565b62001ee78262002011565b810181811067ffffffffffffffff8211171562001f095762001f0862001fce565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f6e6f742065787069726564000000000000000000000000000000000000000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f6e6f74206f776e65720000000000000000000000000000000000000000000000600082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b620023468162001de2565b81146200235257600080fd5b50565b620023608162001df6565b81146200236c57600080fd5b50565b6200237a8162001e22565b81146200238657600080fd5b5056fe60806040523480156200001157600080fd5b50604051620015373803806200153783398181016040528101906200003791906200039d565b33600260016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002825110156200008857600080fd5b6001808160018154018082558091505003906000526020600020505060005b825181101562000122576001838281518110620000c957620000c862000608565b5b60200260200101519080600181540180825580915050600190039060005260206000200160009091909190915090805190602001906200010b929190620001a0565b50808062000119906200055c565b915050620000a7565b5033600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600260006101000a81548160ff021916908315150217905550806000908051906020019062000197929190620001a0565b50505062000690565b828054620001ae90620004f0565b90600052602060002090601f016020900481019282620001d257600085556200021e565b82601f10620001ed57805160ff19168380011785556200021e565b828001600101855582156200021e579182015b828111156200021d57825182559160200191906001019062000200565b5b5090506200022d919062000231565b5090565b5b808211156200024c57600081600090555060010162000232565b5090565b60006200026762000261846200044b565b62000422565b905080838252602082019050828560208602820111156200028d576200028c6200066b565b5b60005b85811015620002e257815167ffffffffffffffff811115620002b757620002b662000666565b5b808601620002c689826200036a565b8552602085019450602084019350505060018101905062000290565b5050509392505050565b600062000303620002fd846200047a565b62000422565b90508281526020810184848401111562000322576200032162000670565b5b6200032f848285620004ba565b509392505050565b600082601f8301126200034f576200034e62000666565b5b81516200036184826020860162000250565b91505092915050565b600082601f83011262000382576200038162000666565b5b815162000394848260208601620002ec565b91505092915050565b60008060408385031215620003b757620003b66200067a565b5b600083015167ffffffffffffffff811115620003d857620003d762000675565b5b620003e68582860162000337565b925050602083015167ffffffffffffffff8111156200040a576200040962000675565b5b62000418858286016200036a565b9150509250929050565b60006200042e62000441565b90506200043c828262000526565b919050565b6000604051905090565b600067ffffffffffffffff82111562000469576200046862000637565b5b602082029050602081019050919050565b600067ffffffffffffffff82111562000498576200049762000637565b5b620004a3826200067f565b9050602081019050919050565b6000819050919050565b60005b83811015620004da578082015181840152602081019050620004bd565b83811115620004ea576000848401525b50505050565b600060028204905060018216806200050957607f821691505b6020821081141562000520576200051f620005d9565b5b50919050565b62000531826200067f565b810181811067ffffffffffffffff8211171562000553576200055262000637565b5b80604052505050565b60006200056982620004b0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156200059f576200059e620005aa565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b610e9780620006a06000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80639fde4ef8116100715780639fde4ef8146101b5578063aec2ccae146101d3578063b54c71eb14610203578063b9e16b6514610233578063dc01262614610251578063dd4bc10114610281576100b4565b80630121b93f146100b957806327cf3844146100e957806344b9f341146101195780634e69d560146101495780635c40f6f41461016757806379ed13a714610197575b600080fd5b6100d360048036038101906100ce91906109ab565b6102b1565b6040516100e09190610b6a565b60405180910390f35b61010360048036038101906100fe9190610951565b6104f7565b6040516101109190610ba7565b60405180910390f35b610133600480360381019061012e91906109ab565b61050f565b6040516101409190610ba7565b60405180910390f35b610151610527565b60405161015e9190610b6a565b60405180910390f35b610181600480360381019061017c919061097e565b61053e565b60405161018e9190610b6a565b60405180910390f35b61019f6105f4565b6040516101ac9190610b48565b60405180910390f35b6101bd6106cd565b6040516101ca9190610ba7565b60405180910390f35b6101ed60048036038101906101e89190610951565b610731565b6040516101fa9190610b6a565b60405180910390f35b61021d600480360381019061021891906109ab565b610751565b60405161022a9190610ba7565b60405180910390f35b61023b61076e565b6040516102489190610b85565b60405180910390f35b61026b60048036038101906102669190610951565b610800565b6040516102789190610ba7565b60405180910390f35b61029b60048036038101906102969190610951565b610849565b6040516102a89190610ba7565b60405180910390f35b6000600260009054906101000a900460ff166102cc57600080fd5b60008214156102da57600080fd5b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016103379190610b2d565b60206040518083038186803b15801561034f57600080fd5b505afa158015610363573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038791906109d8565b90506000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600081141561040557816003600086815260200190815260200160002060008282546103f99190610c28565b9250508190555061045a565b816003600083815260200190815260200160002060008282546104289190610c7e565b92505081905550816003600086815260200190815260200160002060008282546104529190610c28565b925050819055505b83600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167fa9851bf7c64060a1bb8c8c6e89a10c1fb3898337da61ecd2db3ca015ad32ebe0856040516104e49190610ba7565b60405180910390a2600192505050919050565b60046020528060005260406000206000915090505481565b60036020528060005260406000206000915090505481565b6000600260009054906101000a900460ff16905090565b6000600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461059a57600080fd5b81600260006101000a81548160ff0219169083151502179055507fb32dd91638884ac1012ac9d4a0c8cce44d78ecd091818a79ef9210670f6647f7826040516105e39190610b6a565b60405180910390a160019050919050565b60606001805480602002602001604051908101604052809291908181526020016000905b828210156106c457838290600052602060002001805461063790610d2d565b80601f016020809104026020016040519081016040528092919081815260200182805461066390610d2d565b80156106b05780601f10610685576101008083540402835291602001916106b0565b820191906000526020600020905b81548152906001019060200180831161069357829003601f168201915b505050505081526020019060010190610618565b50505050905090565b6000806000905060005b60018054905081101561072957600360008381526020019081526020016000205460036000838152602001908152602001600020541115610716578091505b808061072190610d5f565b9150506106d7565b508091505090565b60056020528060005260406000206000915054906101000a900460ff1681565b600060036000838152602001908152602001600020549050919050565b60606000805461077d90610d2d565b80601f01602080910402602001604051908101604052809291908181526020018280546107a990610d2d565b80156107f65780601f106107cb576101008083540402835291602001916107f6565b820191906000526020600020905b8154815290600101906020018083116107d957829003601f168201915b5050505050905090565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b81526004016108a69190610b2d565b60206040518083038186803b1580156108be57600080fd5b505afa1580156108d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f691906109d8565b9050919050565b60008135905061090c81610e1c565b92915050565b60008135905061092181610e33565b92915050565b60008135905061093681610e4a565b92915050565b60008151905061094b81610e4a565b92915050565b60006020828403121561096757610966610e06565b5b6000610975848285016108fd565b91505092915050565b60006020828403121561099457610993610e06565b5b60006109a284828501610912565b91505092915050565b6000602082840312156109c1576109c0610e06565b5b60006109cf84828501610927565b91505092915050565b6000602082840312156109ee576109ed610e06565b5b60006109fc8482850161093c565b91505092915050565b6000610a118383610aac565b905092915050565b610a2281610cb2565b82525050565b6000610a3382610bd2565b610a3d8185610bf5565b935083602082028501610a4f85610bc2565b8060005b85811015610a8b5784840389528151610a6c8582610a05565b9450610a7783610be8565b925060208a01995050600181019050610a53565b50829750879550505050505092915050565b610aa681610cc4565b82525050565b6000610ab782610bdd565b610ac18185610c06565b9350610ad1818560208601610cfa565b610ada81610e0b565b840191505092915050565b6000610af082610bdd565b610afa8185610c17565b9350610b0a818560208601610cfa565b610b1381610e0b565b840191505092915050565b610b2781610cf0565b82525050565b6000602082019050610b426000830184610a19565b92915050565b60006020820190508181036000830152610b628184610a28565b905092915050565b6000602082019050610b7f6000830184610a9d565b92915050565b60006020820190508181036000830152610b9f8184610ae5565b905092915050565b6000602082019050610bbc6000830184610b1e565b92915050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610c3382610cf0565b9150610c3e83610cf0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610c7357610c72610da8565b5b828201905092915050565b6000610c8982610cf0565b9150610c9483610cf0565b925082821015610ca757610ca6610da8565b5b828203905092915050565b6000610cbd82610cd0565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015610d18578082015181840152602081019050610cfd565b83811115610d27576000848401525b50505050565b60006002820490506001821680610d4557607f821691505b60208210811415610d5957610d58610dd7565b5b50919050565b6000610d6a82610cf0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d9d57610d9c610da8565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b610e2581610cb2565b8114610e3057600080fd5b50565b610e3c81610cc4565b8114610e4757600080fd5b50565b610e5381610cf0565b8114610e5e57600080fd5b5056fea264697066735822122076f42c1e11e7b306c1de6df0271459cf4163cffd725844a365c98da2aabc8ab064736f6c63430008060033a2646970667358221220086be0b1c111dc27eeec6f1d7e4cc0b49afa16859b99f166b9bbbaefcd1ffe1d64736f6c63430008060033a264697066735822122009951f76660a765043828aa67daf499ba5aaf1d75767c9fb757cdb96ec11116564736f6c63430008060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2974:11",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:11"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:11",
                "type": ""
              }
            ],
            "src": "7:139:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "204:87:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "214:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "236:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "223:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "223:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "214:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "279:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "252:26:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "252:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "252:33:11"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "182:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "190:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "198:5:11",
                "type": ""
              }
            ],
            "src": "152:139:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "380:391:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "426:83:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "428:77:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "428:79:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "428:79:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "401:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "410:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "397:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "397:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "422:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "393:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "393:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "390:2:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "519:117:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "534:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "548:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "538:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "563:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "598:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "609:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "594:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "594:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "618:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "573:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "573:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "563:6:11"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "646:118:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "661:16:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "675:2:11",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "665:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "691:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "726:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "737:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "722:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "722:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "746:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "701:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "701:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "691:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "342:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "353:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "365:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "373:6:11",
                "type": ""
              }
            ],
            "src": "297:474:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "842:53:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "859:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "882:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "864:17:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "864:24:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "852:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "852:37:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "852:37:11"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "830:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "837:3:11",
                "type": ""
              }
            ],
            "src": "777:118:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "980:80:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "997:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1047:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_MyToken_$96_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1002:44:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1002:51:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "990:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "990:64:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "990:64:11"
                }
              ]
            },
            "name": "abi_encode_t_contract$_MyToken_$96_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "968:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "975:3:11",
                "type": ""
              }
            ],
            "src": "901:159:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1131:53:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1148:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1171:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1153:17:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1153:24:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1141:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1141:37:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1141:37:11"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1119:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1126:3:11",
                "type": ""
              }
            ],
            "src": "1066:118:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1316:206:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1326:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1338:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1349:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1334:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1334:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1326:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1406:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1419:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1430:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1415:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1415:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1362:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1362:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1362:71:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1487:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1500:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1511:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1496:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1496:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1443:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1443:72:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1443:72:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1280:9:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1292:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1300:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1311:4:11",
                "type": ""
              }
            ],
            "src": "1190:332:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1640:138:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1650:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1662:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1673:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1658:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1658:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1650:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1744:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1757:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1768:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1753:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1753:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_MyToken_$96_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1686:57:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1686:85:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1686:85:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_MyToken_$96__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1612:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1624:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1635:4:11",
                "type": ""
              }
            ],
            "src": "1528:250:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1824:35:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1834:19:11",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1850:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1844:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1844:9:11"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "1834:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1817:6:11",
                "type": ""
              }
            ],
            "src": "1784:75:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1910:51:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1920:35:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1949:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1931:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1931:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1920:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1892:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1902:7:11",
                "type": ""
              }
            ],
            "src": "1865:96:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2012:81:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2022:65:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2037:5:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2044:42:11",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2033:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2033:54:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2022:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1994:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2004:7:11",
                "type": ""
              }
            ],
            "src": "1967:126:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2144:32:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2154:16:11",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2165:5:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2154:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2126:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2136:7:11",
                "type": ""
              }
            ],
            "src": "2099:77:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2256:80:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2266:64:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2324:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_MyToken_$96_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2279:44:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2279:51:11"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "2266:9:11"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_MyToken_$96_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2236:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "2246:9:11",
                "type": ""
              }
            ],
            "src": "2182:154:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2416:53:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2426:37:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2457:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2439:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2439:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "2426:9:11"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_MyToken_$96_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2396:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "2406:9:11",
                "type": ""
              }
            ],
            "src": "2342:127:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2564:28:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2581:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2584:1:11",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2574:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2574:12:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2574:12:11"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "2475:117:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2687:28:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2704:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2707:1:11",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2697:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2697:12:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2697:12:11"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "2598:117:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2764:79:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2821:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2830:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2833:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2823:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2823:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2823:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2787:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2812:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "2794:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2794:24:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2784:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2784:35:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2777:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2777:43:11"
                  },
                  "nodeType": "YulIf",
                  "src": "2774:2:11"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2757:5:11",
                "type": ""
              }
            ],
            "src": "2721:122:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2892:79:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2949:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2958:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2961:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2951:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2951:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2951:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2915:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2940:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "2922:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2922:24:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2912:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2912:35:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2905:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2905:43:11"
                  },
                  "nodeType": "YulIf",
                  "src": "2902:2:11"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2885:5:11",
                "type": ""
              }
            ],
            "src": "2849:122:11"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_MyToken_$96_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_MyToken_$96_to_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_MyToken_$96__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_MyToken_$96_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_MyToken_$96_to_t_address(value) -> converted {\n        converted := convert_t_contract$_MyToken_$96_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_MyToken_$96_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "230:176:0:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "230:176:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;261:142;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;336:7;375:4;381:13;363:32;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;356:39;;261:142;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;7:139:11:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:474::-;365:6;373;422:2;410:9;401:7;397:23;393:32;390:2;;;428:79;;:::i;:::-;390:2;548:1;573:53;618:7;609:6;598:9;594:22;573:53;:::i;:::-;563:63;;519:117;675:2;701:53;746:7;737:6;726:9;722:22;701:53;:::i;:::-;691:63;;646:118;380:391;;;;;:::o;777:118::-;864:24;882:5;864:24;:::i;:::-;859:3;852:37;842:53;;:::o;901:159::-;1002:51;1047:5;1002:51;:::i;:::-;997:3;990:64;980:80;;:::o;1066:118::-;1153:24;1171:5;1153:24;:::i;:::-;1148:3;1141:37;1131:53;;:::o;1190:332::-;1311:4;1349:2;1338:9;1334:18;1326:26;;1362:71;1430:1;1419:9;1415:17;1406:6;1362:71;:::i;:::-;1443:72;1511:2;1500:9;1496:18;1487:6;1443:72;:::i;:::-;1316:206;;;;;:::o;1528:250::-;1635:4;1673:2;1662:9;1658:18;1650:26;;1686:85;1768:1;1757:9;1753:17;1744:6;1686:85;:::i;:::-;1640:138;;;;:::o;1865:96::-;1902:7;1931:24;1949:5;1931:24;:::i;:::-;1920:35;;1910:51;;;:::o;1967:126::-;2004:7;2044:42;2037:5;2033:54;2022:65;;2012:81;;;:::o;2099:77::-;2136:7;2165:5;2154:16;;2144:32;;;:::o;2182:154::-;2246:9;2279:51;2324:5;2279:51;:::i;:::-;2266:64;;2256:80;;;:::o;2342:127::-;2406:9;2439:24;2457:5;2439:24;:::i;:::-;2426:37;;2416:53;;;:::o;2598:117::-;2707:1;2704;2697:12;2721:122;2794:24;2812:5;2794:24;:::i;:::-;2787:5;2784:35;2774:2;;2833:1;2830;2823:12;2774:2;2764:79;:::o;2849:122::-;2922:24;2940:5;2922:24;:::i;:::-;2915:5;2912:35;2902:2;;2961:1;2958;2951:12;2902:2;2892:79;:::o",
  "source": "// contracts/MyToken.sol\r\n// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.6;\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"./MyTokenVote.sol\";\r\n\r\ncontract MyTokenFactory {\r\n    function createMyToken(address addr, uint256 initialSupply) public returns(MyToken) {\r\n        return new MyToken(addr, initialSupply);\r\n    }\r\n}\r\n\r\ncontract MyToken is ERC20, MyTokenVote {\r\n    using SafeMath for uint256;\r\n\r\n    address minter;\r\n    constructor(address addr, uint256 initialSupply) ERC20(\"MyToken\", \"MTK\") {\r\n        _mint(addr, initialSupply);\r\n        minter = addr;\r\n    }\r\n\r\n    function _afterTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual override {\r\n        super._afterTokenTransfer(from, to, amount);\r\n        if (to != address(0) && minter != from && minter != to ) _burn(to, amount.div(100));\r\n    }\r\n}\r\n",
  "sourcePath": "G:/Blockchain/KindlingBlocks/erc20/contracts/MyToken.sol",
  "ast": {
    "absolutePath": "/G/Blockchain/KindlingBlocks/erc20/contracts/MyToken.sol",
    "exportedSymbols": {
      "Context": [
        1177
      ],
      "ERC20": [
        1053
      ],
      "IERC20": [
        1131
      ],
      "IERC20Metadata": [
        1156
      ],
      "MyToken": [
        96
      ],
      "MyTokenFactory": [
        23
      ],
      "MyTokenVote": [
        203
      ],
      "SafeMath": [
        1489
      ],
      "TokenVote1202": [
        507
      ]
    },
    "id": 97,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "59:22:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 97,
        "sourceUnit": 1054,
        "src": "83:55:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 97,
        "sourceUnit": 1490,
        "src": "140:57:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/G/Blockchain/KindlingBlocks/erc20/contracts/MyTokenVote.sol",
        "file": "./MyTokenVote.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 97,
        "sourceUnit": 204,
        "src": "199:27:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          96
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 23,
        "linearizedBaseContracts": [
          23
        ],
        "name": "MyTokenFactory",
        "nameLocation": "239:14:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 21,
              "nodeType": "Block",
              "src": "345:58:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 17,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "375:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18,
                        "name": "initialSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "381:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 16,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "363:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_uint256_$returns$_t_contract$_MyToken_$96_$",
                        "typeString": "function (address,uint256) returns (contract MyToken)"
                      },
                      "typeName": {
                        "id": 15,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 14,
                          "name": "MyToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 96,
                          "src": "367:7:0"
                        },
                        "referencedDeclaration": 96,
                        "src": "367:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MyToken_$96",
                          "typeString": "contract MyToken"
                        }
                      }
                    },
                    "id": 19,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "363:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MyToken_$96",
                      "typeString": "contract MyToken"
                    }
                  },
                  "functionReturnParameters": 13,
                  "id": 20,
                  "nodeType": "Return",
                  "src": "356:39:0"
                }
              ]
            },
            "functionSelector": "9c2dfa0b",
            "id": 22,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createMyToken",
            "nameLocation": "270:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "292:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 22,
                  "src": "284:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "284:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "initialSupply",
                  "nameLocation": "306:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 22,
                  "src": "298:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "298:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "283:37:0"
            },
            "returnParameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 22,
                  "src": "336:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MyToken_$96",
                    "typeString": "contract MyToken"
                  },
                  "typeName": {
                    "id": 11,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10,
                      "name": "MyToken",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 96,
                      "src": "336:7:0"
                    },
                    "referencedDeclaration": 96,
                    "src": "336:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MyToken_$96",
                      "typeString": "contract MyToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "335:9:0"
            },
            "scope": 23,
            "src": "261:142:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 97,
        "src": "230:176:0",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 24,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1053,
              "src": "430:5:0"
            },
            "id": 25,
            "nodeType": "InheritanceSpecifier",
            "src": "430:5:0"
          },
          {
            "baseName": {
              "id": 26,
              "name": "MyTokenVote",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 203,
              "src": "437:11:0"
            },
            "id": 27,
            "nodeType": "InheritanceSpecifier",
            "src": "437:11:0"
          }
        ],
        "contractDependencies": [
          507
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 96,
        "linearizedBaseContracts": [
          96,
          203,
          1053,
          1156,
          1131,
          1177
        ],
        "name": "MyToken",
        "nameLocation": "419:7:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 30,
            "libraryName": {
              "id": 28,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1489,
              "src": "462:8:0"
            },
            "nodeType": "UsingForDirective",
            "src": "456:27:0",
            "typeName": {
              "id": 29,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "475:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 32,
            "mutability": "mutable",
            "name": "minter",
            "nameLocation": "499:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 96,
            "src": "491:14:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 31,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "491:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 52,
              "nodeType": "Block",
              "src": "585:69:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "602:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45,
                        "name": "initialSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "608:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 43,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 913,
                      "src": "596:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "596:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47,
                  "nodeType": "ExpressionStatement",
                  "src": "596:26:0"
                },
                {
                  "expression": {
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48,
                      "name": "minter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "633:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 49,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "642:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "633:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 51,
                  "nodeType": "ExpressionStatement",
                  "src": "633:13:0"
                }
              ]
            },
            "id": 53,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "4d79546f6b656e",
                    "id": 39,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "567:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_245c734e6d4ec044daf7beffa09d54d4bafba490113c199734d790b04a7390e5",
                      "typeString": "literal_string \"MyToken\""
                    },
                    "value": "MyToken"
                  },
                  {
                    "hexValue": "4d544b",
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "578:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_793539e36336d70961c91bdb898dff4b065dbb5ef5ac709025f5b68be91dd01e",
                      "typeString": "literal_string \"MTK\""
                    },
                    "value": "MTK"
                  }
                ],
                "id": 41,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 38,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1053,
                  "src": "561:5:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "561:23:0"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "532:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "524:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "524:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "mutability": "mutable",
                  "name": "initialSupply",
                  "nameLocation": "546:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "538:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "538:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "523:37:0"
            },
            "returnParameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "585:0:0"
            },
            "scope": 96,
            "src": "512:142:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1052
            ],
            "body": {
              "id": 94,
              "nodeType": "Block",
              "src": "793:156:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 66,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "830:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 67,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "836:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 68,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "840:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 63,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "804:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_MyToken_$96_$",
                          "typeString": "type(contract super MyToken)"
                        }
                      },
                      "id": 65,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_afterTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1052,
                      "src": "804:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "804:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 70,
                  "nodeType": "ExpressionStatement",
                  "src": "804:43:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 80,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 71,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "862:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 74,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "876:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 73,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "868:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 72,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "868:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "868:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "862:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 79,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 77,
                          "name": "minter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32,
                          "src": "882:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 78,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "892:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "882:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "862:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 83,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 81,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "900:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 82,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "910:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "900:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "862:50:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 93,
                  "nodeType": "IfStatement",
                  "src": "858:83:0",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 86,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "921:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "313030",
                              "id": 89,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "936:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              }
                            ],
                            "expression": {
                              "id": 87,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59,
                              "src": "925:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 88,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1398,
                            "src": "925:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "925:15:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 85,
                        "name": "_burn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 985,
                        "src": "915:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256)"
                        }
                      },
                      "id": 91,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "915:26:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 92,
                    "nodeType": "ExpressionStatement",
                    "src": "915:26:0"
                  }
                }
              ]
            },
            "id": 95,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfer",
            "nameLocation": "671:19:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 61,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "784:8:0"
            },
            "parameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "709:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "701:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "701:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "732:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "724:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "724:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "753:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "745:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "745:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "690:76:0"
            },
            "returnParameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "793:0:0"
            },
            "scope": 96,
            "src": "662:287:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 97,
        "src": "410:542:0",
        "usedErrors": []
      }
    ],
    "src": "59:895:0"
  },
  "legacyAST": {
    "absolutePath": "/G/Blockchain/KindlingBlocks/erc20/contracts/MyToken.sol",
    "exportedSymbols": {
      "Context": [
        1177
      ],
      "ERC20": [
        1053
      ],
      "IERC20": [
        1131
      ],
      "IERC20Metadata": [
        1156
      ],
      "MyToken": [
        96
      ],
      "MyTokenFactory": [
        23
      ],
      "MyTokenVote": [
        203
      ],
      "SafeMath": [
        1489
      ],
      "TokenVote1202": [
        507
      ]
    },
    "id": 97,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "59:22:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 97,
        "sourceUnit": 1054,
        "src": "83:55:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 97,
        "sourceUnit": 1490,
        "src": "140:57:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/G/Blockchain/KindlingBlocks/erc20/contracts/MyTokenVote.sol",
        "file": "./MyTokenVote.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 97,
        "sourceUnit": 204,
        "src": "199:27:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          96
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 23,
        "linearizedBaseContracts": [
          23
        ],
        "name": "MyTokenFactory",
        "nameLocation": "239:14:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 21,
              "nodeType": "Block",
              "src": "345:58:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 17,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "375:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18,
                        "name": "initialSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "381:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 16,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "363:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_uint256_$returns$_t_contract$_MyToken_$96_$",
                        "typeString": "function (address,uint256) returns (contract MyToken)"
                      },
                      "typeName": {
                        "id": 15,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 14,
                          "name": "MyToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 96,
                          "src": "367:7:0"
                        },
                        "referencedDeclaration": 96,
                        "src": "367:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MyToken_$96",
                          "typeString": "contract MyToken"
                        }
                      }
                    },
                    "id": 19,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "363:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MyToken_$96",
                      "typeString": "contract MyToken"
                    }
                  },
                  "functionReturnParameters": 13,
                  "id": 20,
                  "nodeType": "Return",
                  "src": "356:39:0"
                }
              ]
            },
            "functionSelector": "9c2dfa0b",
            "id": 22,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createMyToken",
            "nameLocation": "270:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "292:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 22,
                  "src": "284:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "284:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "initialSupply",
                  "nameLocation": "306:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 22,
                  "src": "298:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "298:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "283:37:0"
            },
            "returnParameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 22,
                  "src": "336:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MyToken_$96",
                    "typeString": "contract MyToken"
                  },
                  "typeName": {
                    "id": 11,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10,
                      "name": "MyToken",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 96,
                      "src": "336:7:0"
                    },
                    "referencedDeclaration": 96,
                    "src": "336:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MyToken_$96",
                      "typeString": "contract MyToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "335:9:0"
            },
            "scope": 23,
            "src": "261:142:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 97,
        "src": "230:176:0",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 24,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1053,
              "src": "430:5:0"
            },
            "id": 25,
            "nodeType": "InheritanceSpecifier",
            "src": "430:5:0"
          },
          {
            "baseName": {
              "id": 26,
              "name": "MyTokenVote",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 203,
              "src": "437:11:0"
            },
            "id": 27,
            "nodeType": "InheritanceSpecifier",
            "src": "437:11:0"
          }
        ],
        "contractDependencies": [
          507
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 96,
        "linearizedBaseContracts": [
          96,
          203,
          1053,
          1156,
          1131,
          1177
        ],
        "name": "MyToken",
        "nameLocation": "419:7:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 30,
            "libraryName": {
              "id": 28,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1489,
              "src": "462:8:0"
            },
            "nodeType": "UsingForDirective",
            "src": "456:27:0",
            "typeName": {
              "id": 29,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "475:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 32,
            "mutability": "mutable",
            "name": "minter",
            "nameLocation": "499:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 96,
            "src": "491:14:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 31,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "491:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 52,
              "nodeType": "Block",
              "src": "585:69:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "602:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45,
                        "name": "initialSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "608:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 43,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 913,
                      "src": "596:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "596:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47,
                  "nodeType": "ExpressionStatement",
                  "src": "596:26:0"
                },
                {
                  "expression": {
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48,
                      "name": "minter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "633:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 49,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "642:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "633:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 51,
                  "nodeType": "ExpressionStatement",
                  "src": "633:13:0"
                }
              ]
            },
            "id": 53,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "4d79546f6b656e",
                    "id": 39,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "567:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_245c734e6d4ec044daf7beffa09d54d4bafba490113c199734d790b04a7390e5",
                      "typeString": "literal_string \"MyToken\""
                    },
                    "value": "MyToken"
                  },
                  {
                    "hexValue": "4d544b",
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "578:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_793539e36336d70961c91bdb898dff4b065dbb5ef5ac709025f5b68be91dd01e",
                      "typeString": "literal_string \"MTK\""
                    },
                    "value": "MTK"
                  }
                ],
                "id": 41,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 38,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1053,
                  "src": "561:5:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "561:23:0"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "532:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "524:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "524:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "mutability": "mutable",
                  "name": "initialSupply",
                  "nameLocation": "546:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "538:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "538:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "523:37:0"
            },
            "returnParameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "585:0:0"
            },
            "scope": 96,
            "src": "512:142:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1052
            ],
            "body": {
              "id": 94,
              "nodeType": "Block",
              "src": "793:156:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 66,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "830:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 67,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "836:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 68,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "840:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 63,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "804:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_MyToken_$96_$",
                          "typeString": "type(contract super MyToken)"
                        }
                      },
                      "id": 65,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_afterTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1052,
                      "src": "804:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "804:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 70,
                  "nodeType": "ExpressionStatement",
                  "src": "804:43:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 80,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 71,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "862:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 74,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "876:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 73,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "868:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 72,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "868:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "868:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "862:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 79,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 77,
                          "name": "minter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32,
                          "src": "882:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 78,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "892:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "882:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "862:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 83,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 81,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "900:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 82,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "910:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "900:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "862:50:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 93,
                  "nodeType": "IfStatement",
                  "src": "858:83:0",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 86,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "921:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "313030",
                              "id": 89,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "936:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              }
                            ],
                            "expression": {
                              "id": 87,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59,
                              "src": "925:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 88,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1398,
                            "src": "925:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "925:15:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 85,
                        "name": "_burn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 985,
                        "src": "915:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256)"
                        }
                      },
                      "id": 91,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "915:26:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 92,
                    "nodeType": "ExpressionStatement",
                    "src": "915:26:0"
                  }
                }
              ]
            },
            "id": 95,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfer",
            "nameLocation": "671:19:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 61,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "784:8:0"
            },
            "parameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "709:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "701:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "701:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "732:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "724:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "724:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "753:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "745:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "745:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "690:76:0"
            },
            "returnParameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "793:0:0"
            },
            "scope": 96,
            "src": "662:287:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 97,
        "src": "410:542:0",
        "usedErrors": []
      }
    ],
    "src": "59:895:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.6+commit.11564f7e.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x090379cE73824237Ca1CfE529362653408E44Ea2",
      "transactionHash": "0x19f9a0e57b8914b5119626fbc17a1a7b5b25832b5dd43654ea6b3d2b375dde56"
    },
    "1626770394946": {
      "events": {},
      "links": {},
      "address": "0xd5AD1333798354bA67E768535009cEd1e6368B43",
      "transactionHash": "0x560740a36b4d3c6622ca39c85c5f11a9ac82ef9af235d37fc7839e0e6b83f7fc"
    }
  },
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-07-30T02:17:53.223Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}